{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yarin\\\\BigDataProject\\\\client\\\\src\\\\pages\\\\CardScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Cards from '../components/Cards';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardsScreen = () => {\n  _s();\n  // Sample data for the cards\n  const [showCards, setShowCards] = useState(false);\n  const [events, setEvents] = useState([]);\n  const [data, setData] = useState([]);\n  const handleButtonClick = () => {\n    setShowCards(curr => !curr); // This will set the showCards state to true when the button is pressed\n  };\n\n  useEffect(() => {\n    // Function to fetch data from the server\n    const fetchData = async () => {\n      try {\n        const val = 2;\n        const response = await fetch(`http://localhost:8000/geteventsFull?range=${val}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const dataAns = await response.json();\n\n        // console.log(data)\n        setEvents(dataAns.events);\n        const parsedevents = JSON;\n        const hourCounts = events.reduce((acc, message) => {\n          console.log(events.time, 'here should be undef');\n          const hour = getHour(events.time);\n          acc[hour] = (acc[hour] || 0) + 1;\n          return acc;\n        }, {});\n        const datas = Object.keys(hourCounts).map(hour => ({\n          hour: `${hour}:00`,\n          count: hourCounts[hour]\n        }));\n        console.log(datas, 'ssssssssssssssssssssssssssssss');\n        setData(datas);\n        // console.log(data,'her is the real data')\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const getHour = timestamp => {\n    const date = new Date(timestamp);\n    // console.log(timestamp,'timestamp')\n    // console.log(date,'after date')\n    // console.log(date.getHours())\n    return date.getHours();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cards Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 600,\n      height: 300,\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"hour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"count\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleButtonClick,\n        children: \"Show Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), showCards && /*#__PURE__*/_jsxDEV(Cards, {\n      data: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(CardsScreen, \"TA3IIwCfrAHq/i9XdPeCLF1DYUk=\");\n_c = CardsScreen;\nexport default CardsScreen;\nvar _c;\n$RefreshReg$(_c, \"CardsScreen\");","map":{"version":3,"names":["React","useState","useEffect","Cards","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","CardsScreen","_s","showCards","setShowCards","events","setEvents","data","setData","handleButtonClick","curr","fetchData","val","response","fetch","ok","Error","dataAns","json","parsedevents","JSON","hourCounts","reduce","acc","message","console","log","time","hour","getHour","datas","Object","keys","map","count","error","timestamp","date","Date","getHours","children","style","display","justifyContent","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","fill","onClick","_c","$RefreshReg$"],"sources":["C:/Users/yarin/BigDataProject/client/src/pages/CardScreen.jsx"],"sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport Cards from '../components/Cards';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nconst CardsScreen = () => {\r\n  // Sample data for the cards\r\n  const [showCards, setShowCards] = useState(false);\r\n  const [events, setEvents] = useState([]);\r\n  const [data,setData] = useState([])\r\n  const handleButtonClick = () => {\r\n    setShowCards((curr)=> !curr); // This will set the showCards state to true when the button is pressed\r\n  };\r\n  useEffect(() => {\r\n    // Function to fetch data from the server\r\n    const fetchData = async () => {\r\n      try {\r\n        const val = 2\r\n        const response = await fetch(`http://localhost:8000/geteventsFull?range=${val}`);\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const dataAns = await response.json();\r\n\r\n\r\n        // console.log(data)\r\n        setEvents(dataAns.events);\r\n        const parsedevents = JSON\r\n        const hourCounts = events.reduce((acc, message) => {\r\n          console.log(events.time,'here should be undef')\r\n          const hour = getHour(events.time);\r\n          acc[hour] = (acc[hour] || 0) + 1;\r\n          return acc;\r\n        }, {})\r\n\r\n        const datas = Object.keys(hourCounts).map((hour) => ({\r\n          hour: `${hour}:00`,\r\n          count: hourCounts[hour],\r\n        }));\r\n        console.log(datas,'ssssssssssssssssssssssssssssss')\r\n        setData(datas)\r\n        // console.log(data,'her is the real data')\r\n\r\n\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  \r\n  const getHour = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    // console.log(timestamp,'timestamp')\r\n    // console.log(date,'after date')\r\n    // console.log(date.getHours())\r\n    return date.getHours();\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <h2>Cards Screen</h2>\r\n      </div>\r\n      <BarChart width={600} height={300} data={data}>\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"hour\" />\r\n      <YAxis />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Bar dataKey=\"count\" fill=\"#8884d8\" />\r\n    </BarChart>\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <button onClick={handleButtonClick}>Show Cards</button>  \r\n      </div>\r\n      {showCards && <Cards data={events} />} {/* The Cards component will only render if showCards is true */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardsScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvF,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACkB,IAAI,EAACC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAMoB,iBAAiB,GAAGA,CAAA,KAAM;IAC9BL,YAAY,CAAEM,IAAI,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;EAChC,CAAC;;EACDpB,SAAS,CAAC,MAAM;IACd;IACA,MAAMqB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,CAAC;QACb,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6CAA4CF,GAAI,EAAC,CAAC;QAEhF,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QAEA,MAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;;QAGrC;QACAZ,SAAS,CAACW,OAAO,CAACZ,MAAM,CAAC;QACzB,MAAMc,YAAY,GAAGC,IAAI;QACzB,MAAMC,UAAU,GAAGhB,MAAM,CAACiB,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;UACjDC,OAAO,CAACC,GAAG,CAACrB,MAAM,CAACsB,IAAI,EAAC,sBAAsB,CAAC;UAC/C,MAAMC,IAAI,GAAGC,OAAO,CAACxB,MAAM,CAACsB,IAAI,CAAC;UACjCJ,GAAG,CAACK,IAAI,CAAC,GAAG,CAACL,GAAG,CAACK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;UAChC,OAAOL,GAAG;QACZ,CAAC,EAAE,CAAC,CAAC,CAAC;QAEN,MAAMO,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACX,UAAU,CAAC,CAACY,GAAG,CAAEL,IAAI,KAAM;UACnDA,IAAI,EAAG,GAAEA,IAAK,KAAI;UAClBM,KAAK,EAAEb,UAAU,CAACO,IAAI;QACxB,CAAC,CAAC,CAAC;QACHH,OAAO,CAACC,GAAG,CAACI,KAAK,EAAC,gCAAgC,CAAC;QACnDtB,OAAO,CAACsB,KAAK,CAAC;QACd;MAIF,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdV,OAAO,CAACU,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDxB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkB,OAAO,GAAIO,SAAS,IAAK;IAC7B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;IAChC;IACA;IACA;IACA,OAAOC,IAAI,CAACE,QAAQ,CAAC,CAAC;EACxB,CAAC;EAGD,oBACEvC,OAAA;IAAAwC,QAAA,gBACExC,OAAA;MAAKyC,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE;MAAS,CAAE;MAAAH,QAAA,eACxDxC,OAAA;QAAAwC,QAAA,EAAI;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACN/C,OAAA,CAACR,QAAQ;MAACwD,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE,GAAI;MAAC1C,IAAI,EAAEA,IAAK;MAAAiC,QAAA,gBAC9CxC,OAAA,CAACJ,aAAa;QAACsD,eAAe,EAAC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvC/C,OAAA,CAACN,KAAK;QAACyD,OAAO,EAAC;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxB/C,OAAA,CAACL,KAAK;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACT/C,OAAA,CAACH,OAAO;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACX/C,OAAA,CAACF,MAAM;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACV/C,OAAA,CAACP,GAAG;QAAC0D,OAAO,EAAC,OAAO;QAACC,IAAI,EAAC;MAAS;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACT/C,OAAA;MAAKyC,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE;MAAS,CAAE;MAAAH,QAAA,eACxDxC,OAAA;QAAQqD,OAAO,EAAE5C,iBAAkB;QAAA+B,QAAA,EAAC;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,EACL5C,SAAS,iBAAIH,OAAA,CAACT,KAAK;MAACgB,IAAI,EAAEF;IAAO;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAAC,GAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV,CAAC;AAAC7C,EAAA,CA9EID,WAAW;AAAAqD,EAAA,GAAXrD,WAAW;AAgFjB,eAAeA,WAAW;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}