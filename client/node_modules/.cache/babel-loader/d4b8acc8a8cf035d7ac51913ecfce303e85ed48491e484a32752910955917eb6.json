{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yarin\\\\BigDataProject\\\\client\\\\src\\\\pages\\\\CardScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Cards from '../components/Cards';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport StatBox from \"../components/StatBox\";\nimport { tokens } from \"../theme\";\nimport { useTheme, Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardsScreen = () => {\n  _s();\n  // Sample data for the cards\n  const theme = useTheme();\n  const colors = tokens(theme.palette.mode);\n  const [showCards, setShowCards] = useState(false);\n  const [events, setEvents] = useState([]);\n  const [data, setData] = useState([]);\n  const handleButtonClick = () => {\n    setShowCards(curr => !curr); // This will set the showCards state to true when the button is pressed\n  };\n\n  useEffect(() => {\n    // Function to fetch data from the server\n    const fetchData = async () => {\n      try {\n        const val = 2;\n        const response = await fetch(`http://localhost:8000/geteventsFull?range=${val}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const dataAns = await response.json();\n        // console.log(data)\n        setEvents(dataAns.events);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    // Function to fetch data from the server\n    const countPerHour = async () => {\n      const hourCounts = events.reduce((acc, message) => {\n        const hour = getHour(message.time);\n        acc[hour] = (acc[hour] || 0) + 1;\n        return acc;\n      }, {});\n      const datas = Object.keys(hourCounts).map(hour => ({\n        hour: `${hour}:00`,\n        count: hourCounts[hour]\n      }));\n      setData(datas);\n      // console.log(data,'her is the real data')\n    };\n\n    countPerHour();\n  }, [events]);\n  const getHour = timestamp => {\n    const date = new Date(timestamp);\n    return date.getHours();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Last day event Matrix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        margin: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '41%',\n          height: '50%',\n          backgroundColor: colors.primary[400],\n          borderRadius: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            paddingLeft: 4\n          },\n          children: \"Events per hour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          aspect: 2,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            style: {\n              marginRight: 20\n            },\n            data: data,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"hour\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"count\",\n              fill: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '60%',\n          height: '50%',\n          backgroundColor: colors.primary[400],\n          marginLeft: 20,\n          borderRadius: 20,\n          flexDirection: 'row'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            paddingLeft: 4\n          },\n          children: \"Event detials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Cards, {\n          data: events\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), showCards && /*#__PURE__*/_jsxDEV(Cards, {\n      data: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(CardsScreen, \"ftrtVermV33UsFyMMypF3LsI1YM=\", false, function () {\n  return [useTheme];\n});\n_c = CardsScreen;\nexport default CardsScreen;\nvar _c;\n$RefreshReg$(_c, \"CardsScreen\");","map":{"version":3,"names":["React","useState","useEffect","Cards","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","StatBox","tokens","useTheme","Box","jsxDEV","_jsxDEV","CardsScreen","_s","theme","colors","palette","mode","showCards","setShowCards","events","setEvents","data","setData","handleButtonClick","curr","fetchData","val","response","fetch","ok","Error","dataAns","json","error","console","countPerHour","hourCounts","reduce","acc","message","hour","getHour","time","datas","Object","keys","map","count","timestamp","date","Date","getHours","children","style","display","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","margin","width","height","backgroundColor","primary","borderRadius","paddingLeft","aspect","marginRight","strokeDasharray","dataKey","fill","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/yarin/BigDataProject/client/src/pages/CardScreen.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Cards from '../components/Cards';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer } from 'recharts';\r\nimport StatBox from \"../components/StatBox\";\r\nimport { tokens } from \"../theme\";\r\nimport { useTheme, Box } from \"@mui/material\";\r\n\r\nconst CardsScreen = () => {\r\n  // Sample data for the cards\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const [showCards, setShowCards] = useState(false);\r\n  const [events, setEvents] = useState([]);\r\n  const [data, setData] = useState([])\r\n  const handleButtonClick = () => {\r\n    setShowCards((curr) => !curr); // This will set the showCards state to true when the button is pressed\r\n  };\r\n  useEffect(() => {\r\n    // Function to fetch data from the server\r\n    const fetchData = async () => {\r\n      try {\r\n        const val = 2\r\n        const response = await fetch(`http://localhost:8000/geteventsFull?range=${val}`);\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const dataAns = await response.json();\r\n        // console.log(data)\r\n        setEvents(dataAns.events);\r\n\r\n\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    // Function to fetch data from the server\r\n    const countPerHour = async () => {\r\n      const hourCounts = events.reduce((acc, message) => {\r\n        const hour = getHour(message.time);\r\n        acc[hour] = (acc[hour] || 0) + 1;\r\n        return acc;\r\n      }, {})\r\n      const datas = Object.keys(hourCounts).map((hour) => ({\r\n        hour: `${hour}:00`,\r\n        count: hourCounts[hour],\r\n      }));\r\n      setData(datas)\r\n      // console.log(data,'her is the real data')\r\n\r\n    };\r\n\r\n    countPerHour();\r\n  }, [events]);\r\n\r\n\r\n\r\n\r\n  const getHour = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n\r\n    return date.getHours();\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div >\r\n<div style={{display:'flex',justifyContent: 'center', alignItems: 'center'}}>\r\n  <h1>Last day event Matrix</h1>\r\n</div>\r\n    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around',margin:10}}>\r\n      <div style={{width:'41%',height:'50%',backgroundColor:colors.primary[400],borderRadius:20}}>\r\n        <h2 style={{paddingLeft:4}}>Events per hour</h2>\r\n      <ResponsiveContainer aspect={2}  >\r\n            <BarChart style={{marginRight:20}}  data={data}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"hour\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Bar dataKey=\"count\" fill=\"#8884d8\" />\r\n            </BarChart>\r\n            </ResponsiveContainer>\r\n            \r\n      </div>  \r\n      <div style={{width:'60%',height:'50%',backgroundColor:colors.primary[400],marginLeft:20,borderRadius:20,flexDirection:'row'}}>\r\n        <h2 style={{paddingLeft:4}}>Event detials</h2>\r\n         <Cards data={events} />\r\n            \r\n      </div>  \r\n\r\n      </div>\r\n\r\n      {showCards && <Cards data={events} />} {/* The Cards component will only render if showCards is true */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}