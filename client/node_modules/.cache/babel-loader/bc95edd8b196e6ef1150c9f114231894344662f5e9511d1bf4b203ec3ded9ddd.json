{"ast":null,"code":"var _jsxFileName = \"/Users/rebeccajacoby/Desktop/big_data_project/BigDataProject/client/src/components/WebSocketComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card';\nimport './CircleButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketComponent = ({\n  data,\n  flag\n}) => {\n  _s();\n  const [showRedCircle, setShowRedCircle] = useState(false);\n  flag = showRedCircle;\n  useEffect(() => {\n    // Establish WebSocket connection\n    const socket = new WebSocket('ws://localhost:8080');\n    socket.onopen = () => {\n      console.log('WebSocket connection established.');\n    };\n\n    // WebSocket onmessage event\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      console.log('WebSocket message received:', data);\n      if (data.type === 'newMessage') {\n        // Set the state to show the red circle\n        console.log('New message received. Setting showRedCircle to true.');\n        setShowRedCircle(true);\n      }\n    };\n\n    // WebSocket onclose event\n    socket.onclose = () => {\n      console.log('WebSocket connection closed.');\n    };\n\n    // WebSocket onerror event\n    socket.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n\n    // Clean up the WebSocket connection on component unmount\n    return () => {\n      socket.close();\n    };\n  }, []);\n  const handleRedButtonClick = () => {\n    setShowRedCircle(false);\n  };\n  console.log('showRedCircle in WebSocketComponent:', showRedCircle);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), showRedCircle && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"red-circle-button\",\n        style: {\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          zIndex: 1 // Ensures the button appears above the card content\n        },\n\n        onClick: handleRedButtonClick,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(WebSocketComponent, \"cacPJ5IOFxtcqRgmj1sKbh/fgN4=\");\n_c = WebSocketComponent;\nexport default WebSocketComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketComponent\");","map":{"version":3,"names":["React","useEffect","useState","Card","jsxDEV","_jsxDEV","WebSocketComponent","data","flag","_s","showRedCircle","setShowRedCircle","socket","WebSocket","onopen","console","log","onmessage","event","JSON","parse","type","onclose","onerror","error","close","handleRedButtonClick","children","style","position","fileName","_jsxFileName","lineNumber","columnNumber","className","top","right","zIndex","onClick","_c","$RefreshReg$"],"sources":["/Users/rebeccajacoby/Desktop/big_data_project/BigDataProject/client/src/components/WebSocketComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Card from './Card';\nimport './CircleButton.css'; \n\nconst WebSocketComponent = ({data , flag}) => {\n  const [showRedCircle, setShowRedCircle] = useState(false);\n  flag = showRedCircle;\n\n  useEffect(() => {\n    // Establish WebSocket connection\n    const socket = new WebSocket('ws://localhost:8080');\n\n    socket.onopen = () => {\n      console.log('WebSocket connection established.');\n    };\n\n    // WebSocket onmessage event\n    socket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      console.log('WebSocket message received:', data);\n      if (data.type === 'newMessage') {\n        // Set the state to show the red circle\n        console.log('New message received. Setting showRedCircle to true.');\n        setShowRedCircle(true);\n      }\n    };\n\n    // WebSocket onclose event\n    socket.onclose = () => {\n      console.log('WebSocket connection closed.');\n    };\n\n    // WebSocket onerror event\n    socket.onerror = (error) => {\n      console.error('WebSocket error:', error);\n    };\n\n    // Clean up the WebSocket connection on component unmount\n    return () => {\n      socket.close();\n    };\n  }, []);\n\n  const handleRedButtonClick = () => {\n    setShowRedCircle(false);\n  };\n\n  console.log('showRedCircle in WebSocketComponent:', showRedCircle);\n\n\n  return (\n    <div>\n      {/* Pass the refreshData function to the Card component  */}\n      <div style={{ position: 'relative' }}>\n      <Card data={data}/>\n      {showRedCircle && (\n          <button\n            className=\"red-circle-button\"\n            style={{\n              position: 'absolute',\n              top: 0,\n              right: 0,\n              zIndex: 1, // Ensures the button appears above the card content\n            }}\n            onClick={handleRedButtonClick}\n          >\n            Click me\n          </button>\n        )}\n        </div>\n    </div>\n  );\n};\n\nexport default WebSocketComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,kBAAkB,GAAGA,CAAC;EAACC,IAAI;EAAGC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACzDM,IAAI,GAAGE,aAAa;EAEpBT,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAEnDD,MAAM,CAACE,MAAM,GAAG,MAAM;MACpBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAClD,CAAC;;IAED;IACAJ,MAAM,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC5B,MAAMX,IAAI,GAAGY,IAAI,CAACC,KAAK,CAACF,KAAK,CAACX,IAAI,CAAC;MACnCQ,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAET,IAAI,CAAC;MAChD,IAAIA,IAAI,CAACc,IAAI,KAAK,YAAY,EAAE;QAC9B;QACAN,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;QACnEL,gBAAgB,CAAC,IAAI,CAAC;MACxB;IACF,CAAC;;IAED;IACAC,MAAM,CAACU,OAAO,GAAG,MAAM;MACrBP,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC7C,CAAC;;IAED;IACAJ,MAAM,CAACW,OAAO,GAAIC,KAAK,IAAK;MAC1BT,OAAO,CAACS,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C,CAAC;;IAED;IACA,OAAO,MAAM;MACXZ,MAAM,CAACa,KAAK,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjCf,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAEDI,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEN,aAAa,CAAC;EAGlE,oBACEL,OAAA;IAAAsB,QAAA,eAEEtB,OAAA;MAAKuB,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAW,CAAE;MAAAF,QAAA,gBACrCtB,OAAA,CAACF,IAAI;QAACI,IAAI,EAAEA;MAAK;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EAClBvB,aAAa,iBACVL,OAAA;QACE6B,SAAS,EAAC,mBAAmB;QAC7BN,KAAK,EAAE;UACLC,QAAQ,EAAE,UAAU;UACpBM,GAAG,EAAE,CAAC;UACNC,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE,CAAC,CAAE;QACb,CAAE;;QACFC,OAAO,EAAEZ,oBAAqB;QAAAC,QAAA,EAC/B;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACxB,EAAA,CApEIH,kBAAkB;AAAAiC,EAAA,GAAlBjC,kBAAkB;AAsExB,eAAeA,kBAAkB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}