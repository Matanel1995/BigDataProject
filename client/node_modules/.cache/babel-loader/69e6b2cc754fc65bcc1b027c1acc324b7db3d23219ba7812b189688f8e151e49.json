{"ast":null,"code":"var _jsxFileName = \"/Users/rebeccajacoby/Desktop/big_data_project/BigDataProject/client/src/components/ClosestApproach.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box } from '@mui/material';\n// import { useTheme } from \"@mui/material\";\n// import { tokens } from \"../theme\";\n// import StatBox from \"../components/StatBox\";\n\n// const ClosestApproach = () => {\n//   const theme = useTheme();\n//   const colors = tokens(theme.palette.mode);\n\n//   const [closestApproachData, setClosestApproachData] = useState({});\n//   useEffect(() => {\n//     // Function to fetch data from the server\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch('http://localhost:11000/getClosestApproach');\n\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n\n//         const data = await response.json();\n//         console.log('closestApproachData', data);\n//         setClosestApproachData(data.closestApproachData); // Correct variable name here\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <Box\n//       sx={{\n//         borderRadius: '16px',\n//         width: '98%',\n//         backgroundColor: colors.primary[400],\n//         display: 'flex',\n//         flexDirection: 'column',\n//         alignItems: 'center',\n//         margin: '20px',\n//         padding: '25px',\n//         height: '80vh',\n//       }}\n//     >\n//       <h1 style={{ textAlign: 'center', marginBottom: '20px' }}>Closest Approach of The Sun to Earth</h1>\n//       <TableContainer component={Paper} style={{ maxHeight: '400px', overflowY: 'auto' }}>\n//         <Table aria-label=\"closest-approach-table\">\n//           <TableBody>\n//             {Object.entries(closestApproachData).map(([key, value]) => (\n//               <TableRow key={key} sx={{ background: colors.primary[350] }}>\n//                 <TableCell component=\"th\" scope=\"row\" align=\"center\">\n//                   {key}\n//                 </TableCell>\n//                 <TableCell align=\"center\">{value}</TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default ClosestApproach;\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClosestApproach = () => {\n  _s();\n  const [closestApproachData, setClosestApproachData] = useState(null);\n  useEffect(() => {\n    // Function to fetch closestApproachData from the server\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:11000/getClosestApproach');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        console.log('Closest Approach Data:', data);\n        setClosestApproachData(data.closestApproachData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Check if data is null or undefined\n  if (!closestApproachData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Closest Approach Data Available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Closest Approach of The Sun to Earth\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: closestApproachData.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Distance Kilometers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: closestApproachData['Distance Kilometers']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Distance AU\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: closestApproachData['Distance AU']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(ClosestApproach, \"XdAl2PDacOrxx2y+KBxORxzQeKc=\");\n_c = ClosestApproach;\nexport default ClosestApproach;\nvar _c;\n$RefreshReg$(_c, \"ClosestApproach\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ClosestApproach","_s","closestApproachData","setClosestApproachData","fetchData","response","fetch","ok","Error","data","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","date","_c","$RefreshReg$"],"sources":["/Users/rebeccajacoby/Desktop/big_data_project/BigDataProject/client/src/components/ClosestApproach.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box } from '@mui/material';\n// import { useTheme } from \"@mui/material\";\n// import { tokens } from \"../theme\";\n// import StatBox from \"../components/StatBox\";\n\n// const ClosestApproach = () => {\n//   const theme = useTheme();\n//   const colors = tokens(theme.palette.mode);\n\n//   const [closestApproachData, setClosestApproachData] = useState({});\n//   useEffect(() => {\n//     // Function to fetch data from the server\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch('http://localhost:11000/getClosestApproach');\n\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n\n//         const data = await response.json();\n//         console.log('closestApproachData', data);\n//         setClosestApproachData(data.closestApproachData); // Correct variable name here\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <Box\n//       sx={{\n//         borderRadius: '16px',\n//         width: '98%',\n//         backgroundColor: colors.primary[400],\n//         display: 'flex',\n//         flexDirection: 'column',\n//         alignItems: 'center',\n//         margin: '20px',\n//         padding: '25px',\n//         height: '80vh',\n//       }}\n//     >\n//       <h1 style={{ textAlign: 'center', marginBottom: '20px' }}>Closest Approach of The Sun to Earth</h1>\n//       <TableContainer component={Paper} style={{ maxHeight: '400px', overflowY: 'auto' }}>\n//         <Table aria-label=\"closest-approach-table\">\n//           <TableBody>\n//             {Object.entries(closestApproachData).map(([key, value]) => (\n//               <TableRow key={key} sx={{ background: colors.primary[350] }}>\n//                 <TableCell component=\"th\" scope=\"row\" align=\"center\">\n//                   {key}\n//                 </TableCell>\n//                 <TableCell align=\"center\">{value}</TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default ClosestApproach;\n\n\n\nimport React, { useEffect, useState } from 'react';\n\nconst ClosestApproach = () => {\n  const [closestApproachData, setClosestApproachData] = useState(null);\n\n  useEffect(() => {\n    // Function to fetch closestApproachData from the server\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:11000/getClosestApproach');\n\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n\n        const data = await response.json();\n        console.log('Closest Approach Data:', data);\n        setClosestApproachData(data.closestApproachData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // Check if data is null or undefined\n  if (!closestApproachData) {\n    return <div>No Closest Approach Data Available</div>;\n  }\n\n  return (\n    <div>\n      <h2>Closest Approach of The Sun to Earth</h2>\n      <table>\n        <tbody>\n          <tr>\n            <td>Date</td>\n            <td>{closestApproachData.date}</td>\n          </tr>\n          <tr>\n            <td>Distance Kilometers</td>\n            <td>{closestApproachData['Distance Kilometers']}</td>\n          </tr>\n          <tr>\n            <td>Distance AU</td>\n            <td>{closestApproachData['Distance AU']}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ClosestApproach;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}