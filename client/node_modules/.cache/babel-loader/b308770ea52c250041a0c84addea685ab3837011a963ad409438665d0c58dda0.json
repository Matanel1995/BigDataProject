{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yarin\\\\BigDataProject\\\\client\\\\src\\\\pages\\\\CardScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Cards from '../components/Cards';\nimport { PieChart, Pie, Cell, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport StatBox from \"../components/StatBox\";\nimport { tokens } from \"../theme\";\nimport { useTheme, Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardsScreen = () => {\n  _s();\n  // Sample data for the cards\n  const theme = useTheme();\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\n  const [screenHeight, setScreenHeight] = useState(window.innerHeight);\n  const colors = tokens(theme.palette.mode);\n  const [showCards, setShowCards] = useState(false);\n  const [events, setEvents] = useState([]);\n  const [data, setData] = useState([]);\n  const [dataGroupedByTelescop, setDataGroupedByTelescop] = useState([]);\n  const [divHeight, setDivHeight] = useState(0);\n  const divRef = useRef(null);\n\n  // Function to check the height of the div\n  const checkDivHeight = () => {\n    if (divRef.current) {\n      const divHeight = divRef.current.clientHeight;\n      console.log(divHeight);\n      return divHeight;\n    }\n  };\n  const handleResize = () => {\n    setScreenWidth(window.innerWidth);\n    setScreenHeight(window.innerHeight);\n    setDivHeight(checkDivHeight - 87);\n  };\n  useEffect(() => {\n    // Add event listener to handle screen resize\n    window.addEventListener('resize', handleResize);\n\n    // Clean up the event listener on component unmount\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  const handleButtonClick = () => {\n    setShowCards(curr => !curr); // This will set the showCards state to true when the button is pressed\n  };\n\n  useEffect(() => {\n    // Function to fetch data from the server\n    const fetchData = async () => {\n      try {\n        const val = 2;\n        const response = await fetch(`http://localhost:8000/geteventsFull?range=${val}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const dataAns = await response.json();\n        // console.log(data)\n        setEvents(dataAns.events);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    // Function to fetch data from the server\n    const countPerHour = async () => {\n      const hourCounts = events.reduce((acc, message) => {\n        const hour = getHour(message.time);\n        acc[hour] = (acc[hour] || 0) + 1;\n        return acc;\n      }, {});\n      const datas = Object.keys(hourCounts).map(hour => ({\n        hour: `${hour}:00`,\n        count: hourCounts[hour]\n      }));\n      setData(datas);\n      const preData = events.map(item => ({\n        name: item.telescopeName,\n        value: 1\n      }));\n      console.log(preData, 'here it pre data');\n      setDataGroupedByTelescop(groupAndSumByName(preData));\n      console.log(dataGroupedByTelescop, 'checkif good');\n    };\n    countPerHour();\n  }, [events]);\n  const getHour = timestamp => {\n    const date = new Date(timestamp);\n    return date.getHours();\n  };\n  function groupAndSumByName(array) {\n    const groupedData = {};\n    array.forEach(item => {\n      const name = item.name;\n      const value = item.value;\n      if (groupedData[name]) {\n        groupedData[name] += value;\n      } else {\n        groupedData[name] = value;\n      }\n    });\n\n    // Convert the grouped data object into an array of objects\n    const resultArray = Object.keys(groupedData).map(name => ({\n      name,\n      value: groupedData[name]\n    }));\n    return resultArray;\n  }\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#FFA07A', '#20B2AA', '#9370DB', '#32CD32', '#FF1493', '#00CED1', '#FF4500'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Last day event \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        margin: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: divRef,\n        style: {\n          width: '100%',\n          height: '100%',\n          backgroundColor: colors.primary[400],\n          borderRadius: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            paddingLeft: 4\n          },\n          children: \"Events per hour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n          width: screenWidth / 3,\n          height: screenHeight / 3,\n          style: {\n            marginRight: 20\n          },\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"hour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"count\",\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: '100%',\n          backgroundColor: colors.primary[400],\n          marginLeft: 20,\n          borderRadius: 20,\n          flexDirection: 'row'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            paddingLeft: 4\n          },\n          children: \"Event detials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Cards, {\n          data: events,\n          size: checkDivHeight() - 87\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: colors.primary[400],\n        borderRadius: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"telescope location istribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n        width: screenWidth / 1.3,\n        height: screenHeight / 5,\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          data: dataGroupedByTelescop,\n          dataKey: \"value\",\n          nameKey: \"name\",\n          cx: \"50%\",\n          cy: \"50%\",\n          outerRadius: 100,\n          fill: \"#8884d8\",\n          label: true,\n          children: dataGroupedByTelescop.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          align: \"end\",\n          layout: \"vertical\",\n          verticalAlign: \"middle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(CardsScreen, \"O/RGx344TKprJpCzU68I6DCHcEc=\", false, function () {\n  return [useTheme];\n});\n_c = CardsScreen;\nexport default CardsScreen;\nvar _c;\n$RefreshReg$(_c, \"CardsScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Cards","PieChart","Pie","Cell","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","StatBox","tokens","useTheme","Box","jsxDEV","_jsxDEV","CardsScreen","_s","theme","screenWidth","setScreenWidth","window","innerWidth","screenHeight","setScreenHeight","innerHeight","colors","palette","mode","showCards","setShowCards","events","setEvents","data","setData","dataGroupedByTelescop","setDataGroupedByTelescop","divHeight","setDivHeight","divRef","checkDivHeight","current","clientHeight","console","log","handleResize","addEventListener","removeEventListener","handleButtonClick","curr","fetchData","val","response","fetch","ok","Error","dataAns","json","error","countPerHour","hourCounts","reduce","acc","message","hour","getHour","time","datas","Object","keys","map","count","preData","item","name","telescopeName","value","groupAndSumByName","timestamp","date","Date","getHours","array","groupedData","forEach","resultArray","COLORS","children","style","display","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","margin","ref","width","height","backgroundColor","primary","borderRadius","paddingLeft","marginRight","strokeDasharray","dataKey","fill","marginLeft","size","nameKey","cx","cy","outerRadius","label","entry","index","length","align","layout","verticalAlign","_c","$RefreshReg$"],"sources":["C:/Users/yarin/BigDataProject/client/src/pages/CardScreen.jsx"],"sourcesContent":["import React, { useState, useEffect,useRef } from 'react';\r\nimport Cards from '../components/Cards';\r\nimport {PieChart,Pie,Cell ,BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer } from 'recharts';\r\nimport StatBox from \"../components/StatBox\";\r\nimport { tokens } from \"../theme\";\r\nimport { useTheme, Box } from \"@mui/material\";\r\n\r\nconst CardsScreen = () => {\r\n  // Sample data for the cards\r\n  const theme = useTheme();\r\n  const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n  const [screenHeight, setScreenHeight] = useState(window.innerHeight);\r\n  const colors = tokens(theme.palette.mode);\r\n  const [showCards, setShowCards] = useState(false);\r\n  const [events, setEvents] = useState([]);\r\n  const [data, setData] = useState([])\r\n  const [dataGroupedByTelescop, setDataGroupedByTelescop] = useState([])\r\n  const [divHeight,setDivHeight] = useState(0)\r\n\r\n  const divRef = useRef(null);\r\n\r\n  // Function to check the height of the div\r\n  const checkDivHeight = () => {\r\n    if (divRef.current) {\r\n      const divHeight = divRef.current.clientHeight;\r\n      console.log(divHeight)\r\n      return divHeight\r\n    }\r\n  };\r\n  \r\n  \r\n  const handleResize = () => {\r\n    setScreenWidth(window.innerWidth);\r\n    setScreenHeight(window.innerHeight);\r\n    setDivHeight(checkDivHeight-87)\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Add event listener to handle screen resize\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Clean up the event listener on component unmount\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const handleButtonClick = () => {\r\n    setShowCards((curr) => !curr); // This will set the showCards state to true when the button is pressed\r\n  };\r\n  useEffect(() => {\r\n    // Function to fetch data from the server\r\n    const fetchData = async () => {\r\n      try {\r\n        const val = 2\r\n        const response = await fetch(`http://localhost:8000/geteventsFull?range=${val}`);\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n\r\n        const dataAns = await response.json();\r\n        // console.log(data)\r\n        setEvents(dataAns.events);\r\n\r\n\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    // Function to fetch data from the server\r\n    const countPerHour = async () => {\r\n      const hourCounts = events.reduce((acc, message) => {\r\n        const hour = getHour(message.time);\r\n        acc[hour] = (acc[hour] || 0) + 1;\r\n        return acc;\r\n      }, {})\r\n      const datas = Object.keys(hourCounts).map((hour) => ({\r\n        hour: `${hour}:00`,\r\n        count: hourCounts[hour],\r\n      }));\r\n      setData(datas)\r\n     \r\n      const preData = events.map((item) => ({\r\n        name: item.telescopeName,\r\n        value: 1,\r\n      }));\r\n\r\n      console.log(preData,'here it pre data')\r\n      setDataGroupedByTelescop(groupAndSumByName(preData));\r\n      console.log(dataGroupedByTelescop,'checkif good')\r\n\r\n\r\n\r\n    };\r\n\r\n    countPerHour();\r\n  }, [events]);\r\n\r\n\r\n\r\n\r\n  const getHour = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n\r\n    return date.getHours();\r\n  };\r\n\r\nfunction groupAndSumByName(array) {\r\n  const groupedData = {};\r\n\r\n  array.forEach(item => {\r\n    const name = item.name;\r\n    const value = item.value;\r\n\r\n    if (groupedData[name]) {\r\n      groupedData[name] += value;\r\n    } else {\r\n      groupedData[name] = value;\r\n    }\r\n  });\r\n\r\n  // Convert the grouped data object into an array of objects\r\n  const resultArray = Object.keys(groupedData).map(name => ({ name, value: groupedData[name] }));\r\n\r\n  return resultArray;\r\n}\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28',\r\n '#FF8042', '#8884D8', '#FFA07A', '#20B2AA', '#9370DB', \r\n '#32CD32', '#FF1493', '#00CED1', '#FF4500'];\r\n\r\n  return (\r\n    <div >\r\n<div style={{display:'flex',justifyContent: 'center', alignItems: 'center'}}>\r\n  <h1>Last day event </h1>\r\n</div>\r\n    <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around',margin:10}}>\r\n      <div ref={divRef} style={{width:'100%',height:'100%',backgroundColor:colors.primary[400],borderRadius:20}}>\r\n        <h2 style={{paddingLeft:4}}>Events per hour</h2>\r\n   \r\n            <BarChart width={screenWidth/3} height={screenHeight/3} style={{marginRight:20}}  data={data}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"hour\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Bar dataKey=\"count\" fill=\"#8884d8\" />\r\n            </BarChart>\r\n    \r\n            \r\n      </div>  \r\n      <div style={{width:'100%',height:'100%',backgroundColor:colors.primary[400],marginLeft:20,borderRadius:20,flexDirection:'row'}}>\r\n        <h2 style={{paddingLeft:4}}>Event detials</h2>\r\n         <Cards data={events} size={checkDivHeight()-87} />       \r\n      </div>  \r\n\r\n      </div>\r\n      <div style={{width:'100%',height:'100%',backgroundColor:colors.primary[400],borderRadius:20}}>\r\n      <h1>\r\n telescope location istribution</h1>\r\n      {/* <ResponsiveContainer aspect={8} > */}\r\n      <PieChart width={screenWidth/1.3} height={screenHeight/5} >\r\n              <Pie\r\n                data={dataGroupedByTelescop}\r\n                dataKey=\"value\"\r\n                nameKey=\"name\"\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                outerRadius={100}\r\n                fill=\"#8884d8\"\r\n                label\r\n              >\r\n                {dataGroupedByTelescop.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />))}\r\n              </Pie>\r\n              <Legend  align=\"end\" layout=\"vertical\" verticalAlign=\"middle\" />\r\n              <Tooltip />\r\n            </PieChart>\r\n            {/* </ResponsiveContainer> */}\r\n   </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}