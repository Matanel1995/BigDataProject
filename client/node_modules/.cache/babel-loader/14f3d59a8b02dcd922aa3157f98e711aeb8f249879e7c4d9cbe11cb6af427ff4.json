{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yarin\\\\BigDataProject\\\\client\\\\src\\\\components\\\\Cards.jsx\";\nimport React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = props => {\n  const {\n    data,\n    size\n  } = props;\n  const p = 500;\n  const s = `${p}px`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: s,\n      overflowY: 'auto',\n      margin: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      justifyContent: \"center\",\n      children: data.map((item, index) => {\n        var _item$DEC_RA, _item$DEC_RA2;\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            variant: \"outlined\",\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                children: item[\"time\"]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 15,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                children: [\"Telescop Name: \", item[\"telescopeName\"]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                children: [\"DEC: \", (_item$DEC_RA = item[\"DEC_RA\"]) === null || _item$DEC_RA === void 0 ? void 0 : _item$DEC_RA.dec]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                children: [\"RA: \", (_item$DEC_RA2 = item[\"DEC_RA\"]) === null || _item$DEC_RA2 === void 0 ? void 0 : _item$DEC_RA2.ra]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                children: [\"Event: \", item[\"event\"]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                children: [\"Urgency: \", item[\"urgency\"]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","Card","CardContent","Typography","Grid","jsxDEV","_jsxDEV","Cards","props","data","size","p","s","style","height","overflowY","margin","children","container","spacing","justifyContent","map","item","index","_item$DEC_RA","_item$DEC_RA2","xs","sm","md","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","dec","ra","_c","$RefreshReg$"],"sources":["C:/Users/yarin/BigDataProject/client/src/components/Cards.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@mui/material';\r\n\r\nconst Cards = (props) => {\r\n  const { data, size } = props;\r\n  const p = 500\r\n  const s = `${p}px`\r\n  return (\r\n    <div style={{ height: s, overflowY: 'auto', margin: '20px', }}>\r\n      <Grid container spacing={3} justifyContent=\"center\">\r\n        {data.map((item, index) => (\r\n          <Grid item key={index} xs={12} sm={6} md={4}>\r\n            <Card variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\">\r\n                  {item[\"time\"]}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  Telescop Name: {item[\"telescopeName\"]}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  DEC: {item[\"DEC_RA\"]?.dec}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  RA: {item[\"DEC_RA\"]?.ra}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  Event: {item[\"event\"]}\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  Urgency: {item[\"urgency\"]}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}