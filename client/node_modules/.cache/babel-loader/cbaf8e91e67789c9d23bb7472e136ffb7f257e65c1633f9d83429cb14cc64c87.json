{"ast":null,"code":"var _jsxFileName = \"/Users/rebeccajacoby/Desktop/big_data_project/BigDataProject/client/src/components/WebSocketComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketComponent = ({\n  data\n}) => {\n  _s();\n  const [showRedCircle, setShowRedCircle] = useState(false);\n  useEffect(() => {\n    // Establish WebSocket connection\n    const socket = new WebSocket('ws://localhost:8080');\n\n    // WebSocket onmessage event\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'newMessage') {\n        // Set the state to show the red circle\n        console.log('New message received. Setting showRedCircle to true.');\n        setShowRedCircle(true);\n      }\n    };\n\n    // WebSocket onclose event\n    socket.onclose = () => {\n      console.log('WebSocket connection closed.');\n    };\n\n    // WebSocket onerror event\n    socket.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n\n    // Clean up the WebSocket connection on component unmount\n    return () => {\n      socket.close();\n    };\n  }, []);\n  const handleRedButtonClick = () => {\n    setShowRedCircle(false);\n  };\n  console.log('showRedCircle in WebSocketComponent:', showRedCircle);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showRedCircle && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"red-circle-button\",\n      onClick: handleRedButtonClick,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(WebSocketComponent, \"cacPJ5IOFxtcqRgmj1sKbh/fgN4=\");\n_c = WebSocketComponent;\nexport default WebSocketComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketComponent\");","map":{"version":3,"names":["React","useEffect","useState","Card","jsxDEV","_jsxDEV","WebSocketComponent","data","_s","showRedCircle","setShowRedCircle","socket","WebSocket","onmessage","event","JSON","parse","type","console","log","onclose","onerror","error","close","handleRedButtonClick","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rebeccajacoby/Desktop/big_data_project/BigDataProject/client/src/components/WebSocketComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Card from './Card';\n\nconst WebSocketComponent = ({data}) => {\n  const [showRedCircle, setShowRedCircle] = useState(false);\n\n  useEffect(() => {\n    // Establish WebSocket connection\n    const socket = new WebSocket('ws://localhost:8080');\n\n    // WebSocket onmessage event\n    socket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'newMessage') {\n        // Set the state to show the red circle\n        console.log('New message received. Setting showRedCircle to true.');\n        setShowRedCircle(true);\n      }\n    };\n\n    // WebSocket onclose event\n    socket.onclose = () => {\n      console.log('WebSocket connection closed.');\n    };\n\n    // WebSocket onerror event\n    socket.onerror = (error) => {\n      console.error('WebSocket error:', error);\n    };\n\n    // Clean up the WebSocket connection on component unmount\n    return () => {\n      socket.close();\n    };\n  }, []);\n\n  const handleRedButtonClick = () => {\n    setShowRedCircle(false);\n  };\n\n  console.log('showRedCircle in WebSocketComponent:', showRedCircle);\n\n\n  return (\n    <div>\n      {/* Pass the refreshData function to the Card component  */}\n      {/* <Card data={data}/> */}\n      {showRedCircle && <button className=\"red-circle-button\" onClick={handleRedButtonClick}>Click me</button>}\n    </div>\n  );\n};\n\nexport default WebSocketComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,kBAAkB,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEzDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;;IAEnD;IACAD,MAAM,CAACE,SAAS,GAAIC,KAAK,IAAK;MAC5B,MAAMP,IAAI,GAAGQ,IAAI,CAACC,KAAK,CAACF,KAAK,CAACP,IAAI,CAAC;MACnC,IAAIA,IAAI,CAACU,IAAI,KAAK,YAAY,EAAE;QAC9B;QACAC,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;QACnET,gBAAgB,CAAC,IAAI,CAAC;MACxB;IACF,CAAC;;IAED;IACAC,MAAM,CAACS,OAAO,GAAG,MAAM;MACrBF,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC7C,CAAC;;IAED;IACAR,MAAM,CAACU,OAAO,GAAIC,KAAK,IAAK;MAC1BJ,OAAO,CAACI,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C,CAAC;;IAED;IACA,OAAO,MAAM;MACXX,MAAM,CAACY,KAAK,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjCd,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAEDQ,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEV,aAAa,CAAC;EAGlE,oBACEJ,OAAA;IAAAoB,QAAA,EAGGhB,aAAa,iBAAIJ,OAAA;MAAQqB,SAAS,EAAC,mBAAmB;MAACC,OAAO,EAAEH,oBAAqB;MAAAC,QAAA,EAAC;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrG,CAAC;AAEV,CAAC;AAACvB,EAAA,CA/CIF,kBAAkB;AAAA0B,EAAA,GAAlB1B,kBAAkB;AAiDxB,eAAeA,kBAAkB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}