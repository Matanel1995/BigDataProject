{"ast":null,"code":"var _jsxFileName = \"/Users/rebeccajacoby/Desktop/big_data_project/BigDataProject/client/src/components/WebSocketComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card';\nimport './CircleButton.css';\nimport { useTheme, Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketComponent = ({\n  data\n}) => {\n  _s();\n  const [showRedCircle, setShowRedCircle] = useState(false);\n  useEffect(() => {\n    // Establish WebSocket connection\n    const socket = new WebSocket('ws://localhost:8080');\n    socket.onopen = () => {\n      console.log('WebSocket connection established.');\n    };\n\n    // WebSocket onmessage event\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      console.log('WebSocket message received:', data);\n      if (data.type === 'newMessage') {\n        // Set the state to show the red circle\n        console.log('New message received. Setting showRedCircle to true.');\n        setShowRedCircle(true);\n      }\n    };\n\n    // WebSocket onclose event\n    socket.onclose = () => {\n      console.log('WebSocket connection closed.');\n    };\n\n    // WebSocket onerror event\n    socket.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n\n    // Clean up the WebSocket connection on component unmount\n    return () => {\n      socket.close();\n    };\n  }, []);\n  const handleRedButtonClick = () => {\n    setShowRedCircle(false);\n  };\n  console.log('showRedCircle in WebSocketComponent:', showRedCircle);\n\n  // return (\n\n  //   <div>\n  //     {/* Pass the refreshData function to the Card component  */}\n  //     <Card data={data}/>\n  //     {showRedCircle && <button className=\"red-circle-button\" onClick={handleRedButtonClick}>Click me</button>}\n  //   </div>\n  // );\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [showRedCircle && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"red-circle-button\",\n        onClick: handleRedButtonClick,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Card, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(WebSocketComponent, \"cacPJ5IOFxtcqRgmj1sKbh/fgN4=\");\n_c = WebSocketComponent;\nexport default WebSocketComponent;\nvar _c;\n$RefreshReg$(_c, \"WebSocketComponent\");","map":{"version":3,"names":["React","useEffect","useState","Card","useTheme","Box","jsxDEV","_jsxDEV","WebSocketComponent","data","_s","showRedCircle","setShowRedCircle","socket","WebSocket","onopen","console","log","onmessage","event","JSON","parse","type","onclose","onerror","error","close","handleRedButtonClick","children","style","display","flexDirection","alignItems","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rebeccajacoby/Desktop/big_data_project/BigDataProject/client/src/components/WebSocketComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Card from './Card';\nimport './CircleButton.css';\nimport { useTheme, Box } from \"@mui/material\";\n\nconst WebSocketComponent = ({ data }) => {\n  const [showRedCircle, setShowRedCircle] = useState(false);\n\n  useEffect(() => {\n    // Establish WebSocket connection\n    const socket = new WebSocket('ws://localhost:8080');\n\n    socket.onopen = () => {\n      console.log('WebSocket connection established.');\n    };\n\n    // WebSocket onmessage event\n    socket.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      console.log('WebSocket message received:', data);\n      if (data.type === 'newMessage') {\n        // Set the state to show the red circle\n        console.log('New message received. Setting showRedCircle to true.');\n        setShowRedCircle(true);\n      }\n    };\n\n    // WebSocket onclose event\n    socket.onclose = () => {\n      console.log('WebSocket connection closed.');\n    };\n\n    // WebSocket onerror event\n    socket.onerror = (error) => {\n      console.error('WebSocket error:', error);\n    };\n\n    // Clean up the WebSocket connection on component unmount\n    return () => {\n      socket.close();\n    };\n  }, []);\n\n  const handleRedButtonClick = () => {\n    setShowRedCircle(false);\n  };\n\n  console.log('showRedCircle in WebSocketComponent:', showRedCircle);\n\n\n  // return (\n\n  //   <div>\n  //     {/* Pass the refreshData function to the Card component  */}\n  //     <Card data={data}/>\n  //     {showRedCircle && <button className=\"red-circle-button\" onClick={handleRedButtonClick}>Click me</button>}\n  //   </div>\n  // );\n  return (\n    <Box\n    >\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        {showRedCircle && <button className=\"red-circle-button\" onClick={handleRedButtonClick}>Click me</button>}\n        <div> <Card data={data} /></div>\n\n      </div>\n\n\n    </Box>\n\n  );\n};\n\nexport default WebSocketComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,oBAAoB;AAC3B,SAASC,QAAQ,EAAEC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEzDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAEnDD,MAAM,CAACE,MAAM,GAAG,MAAM;MACpBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAClD,CAAC;;IAED;IACAJ,MAAM,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC5B,MAAMV,IAAI,GAAGW,IAAI,CAACC,KAAK,CAACF,KAAK,CAACV,IAAI,CAAC;MACnCO,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAER,IAAI,CAAC;MAChD,IAAIA,IAAI,CAACa,IAAI,KAAK,YAAY,EAAE;QAC9B;QACAN,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;QACnEL,gBAAgB,CAAC,IAAI,CAAC;MACxB;IACF,CAAC;;IAED;IACAC,MAAM,CAACU,OAAO,GAAG,MAAM;MACrBP,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC7C,CAAC;;IAED;IACAJ,MAAM,CAACW,OAAO,GAAIC,KAAK,IAAK;MAC1BT,OAAO,CAACS,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C,CAAC;;IAED;IACA,OAAO,MAAM;MACXZ,MAAM,CAACa,KAAK,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjCf,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAEDI,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEN,aAAa,CAAC;;EAGlE;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA,oBACEJ,OAAA,CAACF,GAAG;IAAAuB,QAAA,eAEFrB,OAAA;MAAKsB,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAJ,QAAA,GAC5EjB,aAAa,iBAAIJ,OAAA;QAAQ0B,SAAS,EAAC,mBAAmB;QAACC,OAAO,EAAEP,oBAAqB;QAAAC,QAAA,EAAC;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxG/B,OAAA;QAAAqB,QAAA,GAAK,GAAC,eAAArB,OAAA,CAACJ,IAAI;UAACM,IAAI,EAAEA;QAAK;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE7B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGH,CAAC;AAGV,CAAC;AAAC5B,EAAA,CAlEIF,kBAAkB;AAAA+B,EAAA,GAAlB/B,kBAAkB;AAoExB,eAAeA,kBAAkB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}