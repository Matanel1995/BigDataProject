{"ast":null,"code":"var _jsxFileName = \"/Users/rebeccajacoby/Desktop/big_data_project/BigDataProject/client/src/components/ClosestApproach.jsx\";\n// import React, { useEffect, useState } from 'react';\n// import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box } from '@mui/material';\n// import { useTheme } from \"@mui/material\";\n// import { tokens } from \"../theme\";\n// import StatBox from \"../components/StatBox\";\n\n// const ClosestApproach = () => {\n//   const theme = useTheme();\n//   const colors = tokens(theme.palette.mode);\n\n//   const [closestApproachData, setClosestApproachData] = useState({});\n//   useEffect(() => {\n//     // Function to fetch data from the server\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch('http://localhost:11000/getClosestApproach');\n\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n\n//         const data = await response.json();\n//         console.log('DATAAAAAA', data);\n//         setClosestApproachData(data.closestApproachData); // Correct variable name here\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <Box\n//       sx={{\n//         borderRadius: '16px',\n//         width: '98%',\n//         backgroundColor: colors.primary[400],\n//         display: 'flex',\n//         flexDirection: 'column',\n//         alignItems: 'center',\n//         margin: '20px',\n//         padding: '25px',\n//         height: '80vh',\n//       }}\n//     >\n//       <h1 style={{ textAlign: 'center', marginBottom: '20px' }}>Closest Approach of The Sun to Earth</h1>\n//       <TableContainer component={Paper} style={{ maxHeight: '400px', overflowY: 'auto' }}>\n//         <Table aria-label=\"closest-approach-table\">\n//           <TableBody>\n//             {Object.entries(closestApproachData).map(([key, value]) => (\n//               <TableRow key={key} sx={{ background: colors.primary[350] }}>\n//                 <TableCell component=\"th\" scope=\"row\" align=\"center\">\n//                   {key}\n//                 </TableCell>\n//                 <TableCell align=\"center\">{value}</TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default ClosestApproach;\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClosestApproach = ({\n  data\n}) => {\n  // Ensure data is available before rendering\n  if (!data) {\n    return null;\n  }\n  const {\n    title,\n    Description,\n    date,\n    'Distance Kilometers': distanceKm,\n    'Distance AU': distanceAU\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: Description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Distance Kilometers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: distanceKm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Distance AU\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: distanceAU\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_c = ClosestApproach;\nexport default ClosestApproach;\nvar _c;\n$RefreshReg$(_c, \"ClosestApproach\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ClosestApproach","data","title","Description","date","distanceKm","distanceAU","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rebeccajacoby/Desktop/big_data_project/BigDataProject/client/src/components/ClosestApproach.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box } from '@mui/material';\n// import { useTheme } from \"@mui/material\";\n// import { tokens } from \"../theme\";\n// import StatBox from \"../components/StatBox\";\n\n// const ClosestApproach = () => {\n//   const theme = useTheme();\n//   const colors = tokens(theme.palette.mode);\n\n//   const [closestApproachData, setClosestApproachData] = useState({});\n//   useEffect(() => {\n//     // Function to fetch data from the server\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch('http://localhost:11000/getClosestApproach');\n\n//         if (!response.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n\n//         const data = await response.json();\n//         console.log('DATAAAAAA', data);\n//         setClosestApproachData(data.closestApproachData); // Correct variable name here\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <Box\n//       sx={{\n//         borderRadius: '16px',\n//         width: '98%',\n//         backgroundColor: colors.primary[400],\n//         display: 'flex',\n//         flexDirection: 'column',\n//         alignItems: 'center',\n//         margin: '20px',\n//         padding: '25px',\n//         height: '80vh',\n//       }}\n//     >\n//       <h1 style={{ textAlign: 'center', marginBottom: '20px' }}>Closest Approach of The Sun to Earth</h1>\n//       <TableContainer component={Paper} style={{ maxHeight: '400px', overflowY: 'auto' }}>\n//         <Table aria-label=\"closest-approach-table\">\n//           <TableBody>\n//             {Object.entries(closestApproachData).map(([key, value]) => (\n//               <TableRow key={key} sx={{ background: colors.primary[350] }}>\n//                 <TableCell component=\"th\" scope=\"row\" align=\"center\">\n//                   {key}\n//                 </TableCell>\n//                 <TableCell align=\"center\">{value}</TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </Box>\n//   );\n// };\n\n// export default ClosestApproach;\n\nimport React from 'react';\n\nconst ClosestApproach = ({ data }) => {\n  // Ensure data is available before rendering\n  if (!data) {\n    return null;\n  }\n\n  const { title, Description, date, 'Distance Kilometers': distanceKm, 'Distance AU': distanceAU } = data;\n\n  return (\n    <div>\n      <h2>{title}</h2>\n      <p>{Description}</p>\n      <table>\n        <tbody>\n          <tr>\n            <td>Date</td>\n            <td>{date}</td>\n          </tr>\n          <tr>\n            <td>Distance Kilometers</td>\n            <td>{distanceKm}</td>\n          </tr>\n          <tr>\n            <td>Distance AU</td>\n            <td>{distanceAU}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ClosestApproach;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACpC;EACA,IAAI,CAACA,IAAI,EAAE;IACT,OAAO,IAAI;EACb;EAEA,MAAM;IAAEC,KAAK;IAAEC,WAAW;IAAEC,IAAI;IAAE,qBAAqB,EAAEC,UAAU;IAAE,aAAa,EAAEC;EAAW,CAAC,GAAGL,IAAI;EAEvG,oBACEF,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAKL;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBZ,OAAA;MAAAQ,QAAA,EAAIJ;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBZ,OAAA;MAAAQ,QAAA,eACER,OAAA;QAAAQ,QAAA,gBACER,OAAA;UAAAQ,QAAA,gBACER,OAAA;YAAAQ,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbZ,OAAA;YAAAQ,QAAA,EAAKH;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC,eACLZ,OAAA;UAAAQ,QAAA,gBACER,OAAA;YAAAQ,QAAA,EAAI;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5BZ,OAAA;YAAAQ,QAAA,EAAKF;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACLZ,OAAA;UAAAQ,QAAA,gBACER,OAAA;YAAAQ,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBZ,OAAA;YAAAQ,QAAA,EAAKD;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACC,EAAA,GA9BIZ,eAAe;AAgCrB,eAAeA,eAAe;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}